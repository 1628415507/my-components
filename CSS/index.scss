
//一、容器
//justify-content: flex-start | flex-end | center | space-between | space-around;
//1、flex-start：默认情况，沿主轴开始方向对齐
//2、flex-end：沿主轴相反方向对齐
//3、center：在主轴方向居中显示
//4、space-between：沿主轴方向两端对齐
//5、space-around：从主轴开始，项目两边间隔相同

//align-items: flex-start | flex-end | center | baseline | stretch;
//1、flex-start：默认情况，沿主轴开始方向对齐
//2、flex-end：沿主轴相反方向对齐
//3、center：在主轴方向居中显示
//4、baseline：文字基线对齐
//5、stretch：如果元素不设置高度(交叉轴为纵轴)或者宽度(交叉轴为横轴)时，自动填充整个容器

//flex-wrap: nowrap | wrap | wrap-reverse;
//1、nowrap：默认不换行
//2、wrap：换行
//3、wrap-reverse，逆向换行，第一行会跑到第二行下面

.f {
	display: flex;
}
.fr {
	display: flex;
	flex-direction: row;
}
.fr-ac {
	display: flex;
	flex-direction: row;
	align-items: center;
}
.fr-ae {
	display: flex;
	flex-direction: row;
	align-items: flex-end;
}
.fr-jc {
	display: flex;
	flex-direction: row;
	justify-content: center;
}
.fr-je {
	display: flex;
	flex-direction: row;
	justify-content: flex-end;
}
.fr-jsb {
	display: flex;
	flex-direction: row;
	justify-content: space-between;
}
.fr-jsa {
	display: flex;
	flex-direction: row;
	justify-content: space-around;
}

.fc {
	display: flex;
	flex-direction: column;
}
.fc-ac {
	display: flex;
	flex-direction: column;
	align-items: center;
}
.fc-ae {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
}
.fc-jc {
	display: flex;
	flex-direction: column;
	justify-content: center;
}
.fc-je {
	display: flex;
	flex-direction: column;
	justify-content: flex-end;
}
.fc-jsb {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}
.fc-jsa {
	display: flex;
	flex-direction: column;
	justify-content: space-around;
}

.fr-ac-jc {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
}
.fr-ac-je {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: flex-end;
}
.fr-ac-jsb {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
}
.fr-ac-jsa {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
}
.fr-ae-jc {
	display: flex;
	flex-direction: row;
	align-items: flex-end;
	justify-content: center;
}
.fr-ae-je {
	display: flex;
	flex-direction: row;
	align-items: flex-end;
	justify-content: flex-end;
}
.fr-ae-jsb {
	display: flex;
	flex-direction: row;
	align-items: flex-end;
	justify-content: space-between;
}
.fr-ae-jsa {
	display: flex;
	flex-direction: row;
	align-items: flex-end;
	justify-content: space-around;
}
.fc-ac-jc {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}
.fc-ac-je {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-end;
}
.fc-ac-jsb {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-between;
}
.fc-ae-jsa {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	justify-content: space-around;
}

.fc-ae-jc {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	justify-content: center;
}
.fc-ae-je {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	justify-content: flex-end;
}
.fc-ae-jsb {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	justify-content: space-between;
}
.fc-ae-jsa {
	display: flex;
	flex-direction: column;
	align-items: flex-end;
	justify-content: space-around;
}

.fw {
	display: flex;
	flex-wrap: wrap;
}
.fw-sb {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
}

//二、元素
//align-self: auto | flex-start | flex-end | center | baseline | stretch;
.as-e {
	align-self: flex-end;
}
.as-c {
	align-self: flex-end;
}


.dis-b {
	display: block;
}
.dis-i {
	display: inline-block;
}
.dis-n {
	display: none;
}

.ta-l {
	text-align: left;
}
.ta-c {
	text-align: center;
}
.ta-r {
	text-align: right;
}

//文本两端对齐
.ta-j {
	text-align: justify;
	text-align-last: justify;
}

.fw-b {
	font-weight: bold;
}
//删除线
.td-lt {
	text-decoration: line-through;
}
//下划线
.td-u {
	text-decoration:underline;
}
//层级
.zi-0 {
	z-index: 0;
}
.zi-9 {
	z-index: 9;
}
.zi-99 {
	z-index: 99;
}
.zi-999 {
	z-index: 999;
}
.zi-9999 {
	z-index: 9999;
}
.zi-99999 {
	z-index: 99999;
}

//特殊圆角
.bor-rad-100 {
	border-radius: 100px !important;
}
.bor-n {
	border: none !important;
}
.bor-rad-50p {
	border-radius: 50%;
}

.bor-main {
	border: 1px solid $color-main !important;
}
.bor-main-2 {
	border: 2px solid $color-main !important;
}
.bor-b-main {
	border-bottom: 1px solid $color-main !important;
}
.bor {
	border: 1px solid $color-border;
}
.bor-blue{
	border: 1px solid $color-blue;
}
.bor-t {
	border-top: 1px solid $color-border;
}
.bor-l {
	border-left: 1px solid $color-border;
}
.bor-b {
	border-bottom: 1px solid $color-border;
}
.bor-r {
	border-right: 1px solid $color-border;
}

.pos-f {
	position: fixed;
}
.pos-a {
	position: absolute;
}
.pos-r {
	position: relative;
}

.top-0 {
	top: 0;
	left: 0;
	right: 0;
}
.top-44 {
	top: 44px;
	left: 0;
	right: 0;
}
.bottom-0 {
	bottom: 0;
	left: 0;
	right: 0;
}
//溢出隐藏
.over-hide {
	overflow: hidden;
}
//
.boxs-bb{
	box-sizing: border-box;
}




//遮挡层
.wjx-mask::after {
	content: '';
	position: absolute;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, 0.3);
	top: 0;
	left: 0;
}

//超度n行,出现省略号
.row-num1 {
	overflow: hidden;
	display: -webkit-box;
	-webkit-line-clamp: 1;
	-webkit-box-orient: vertical;
	word-break: break-all;
	text-overflow: ellipsis;
}
.row-num2 {
	overflow: hidden;
	display: -webkit-box;
	-webkit-line-clamp: 2;
	-webkit-box-orient: vertical;
	word-break: break-all;
	text-overflow: ellipsis;
}
.row-num3 {
	overflow: hidden;
	display: -webkit-box;
	-webkit-line-clamp: 3;
	-webkit-box-orient: vertical;
	word-break: break-all;
	text-overflow: ellipsis;
}

//背景图片 虚化
$bg-fpx: 3px;
.bg-img-f {
	-webkit-filter: blur($bg-fpx);
	-moz-filter: blur($bg-fpx);
	-o-filter: blur($bg-fpx);
	-ms-filter: blur($bg-fpx);
	filter: blur($bg-fpx);
	height: 100%;
	width: 100%;
}

// 背景颜色渐变
// background: linear-gradient(to bottom,#323c94 0%,#36b8c6 100%);
.bg-lg{
	background: linear-gradient(to left,#E32C51 0%,#F3AA2B 100%);
}
//阴影
.box-s {
	box-shadow: 0px 0px 5px 0px #eee;
}
.box-s1 {
	box-shadow: 0px 0px 5px 0px #E3E3E3;
}
//文本不换行
.ws-no {
	white-space: nowrap;
}
//自动换行
.ww-bw{
	word-wrap:break-word;
}
//强制英文单词断行
.wb-ba{
	word-break:break-all;
}
//旋转
$rotate-px: 45deg;
.rotate {
	transform: rotate($rotate-px);
	-ms-transform: rotate($rotate-px);
	-moz-transform: rotate($rotate-px);
	-webkit-transform: rotate($rotate-px);
	-o-transform: rotate($rotate-px);
}


.bg-img {
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}
.bg-mask {
	/* background-color: ; */
	position: relative;
	overflow: hidden;
}

.bg-mask::after {
	content: '';
	border-radius: inherit;
	width: 100%;
	height: 100%;
	display: block;
	background-color: rgba(9, 11, 23, 0.2);
	position: absolute;
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
}

.bg-mask view,
.bg-mask cover-view {
	z-index: 5;
	position: relative;
}

.img-mask {
	position: absolute;
	width: 100%;
	height: 100%;
	display: block;
	position: absolute;
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
	overflow: hidden;
}
.img-100 {
	width: 100%;
	height: 100%;
}


//循环变量简写

@for $i from 0 through 10 {
  .fw-#{$i*100}{
    font-weight: $i*100;
  }
}

//放大缩小
@for $i from 0 through 20 {
  .t-s-#{$i}{
    opacity: $i/20;
  }
}
@for $i from 0 through 10 {
  .opa-#{$i}{
    opacity: $i/10;
  }
}

@for $i from 0 through 12 {
  .flex-#{$i}{
    flex: $i;
  }
}

@for $i from 0 through 100 {
  .fsp-#{$i}{
    font-size: $i + px !important;
    uni-view{
      font-size: $i + px !important;
    }

    view{
      font-size: $i + px !important;
    }
  }

  .fs-#{$i}{
    font-size: $i*2 + rpx !important;
    uni-view{
      font-size: $i*2 + rpx !important;
    }

    view{
      font-size: $i*2 + rpx !important;
    }
  }

  .bor-rad-#{$i}{
    border-radius: $i*2 + rpx !important;
  }
}

// 定义内外边距，历遍1-100
@for $i from 0 through 100 {
  // 只要双数和能被5除尽的数
  // 得出：margin-30或者m-30
  .w-#{$i}{
    width: $i#{'%'} !important;
  }

  .h-#{$i}{
    height: $i#{'%'} !important;
  }

  .wv-#{$i}{
    width: $i + 'vw' !important;
  }

  .hv-#{$i}{
    height: $i + 'vh' !important;
  }

  .m-#{$i} {
    margin: $i*2 + rpx!important;
  }

  // 得出：padding-30或者p-30
  .p-#{$i} {
    padding: $i*2 + rpx!important;
  }

  @each $short, $long in l left, t top, r right, b bottom {
    // 缩写版，结果如： ml-30
    // 定义外边距
    .m#{$short}-#{$i} {
      margin-#{$long}: $i*2 + rpx!important;
    }

    // 定义内边距
    .p#{$short}-#{$i} {
      padding-#{$long}: $i*2 + rpx!important;
    }

    .#{$long}-#{$i} {
      #{$long}:  $i*2 + rpx!important;
    }

    //.#{$long} {
    //  #{$long}:  $i#{'%'}!important;
    //}
  }

  @each $short in lr, tb {
    // 缩写版，结果如： mlr-30
    // 定义外边距
    @if $short == lr {
      .mlr-#{$i} {
        margin-left: $i*2 + rpx!important;
        margin-right: $i*2 + rpx!important;
      }
    }

    @if $short == tb {
      .mtb-#{$i} {
        margin-top: $i*2 + rpx!important;
        margin-bottom: $i*2 + rpx!important;
      }
    }


    // 定义内边距
    @if $short == lr {
      .plr-#{$i} {
        padding-left: $i*2 + rpx!important;
        padding-right: $i*2 + rpx!important;
      }
    }

    @if $short == tb {
      .ptb-#{$i} {
        padding-top: $i*2 + rpx!important;
        padding-bottom: $i*2 + rpx!important;
      }
    }
  }
}
